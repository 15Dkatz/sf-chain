* Have a demo in the beginning to show off the capabilities.
* Extend to a Node AND React app <-- expose a frontend to the API.
* Dockerize the app eventually.
* Extend these concepts to explanation videos.
* Explain the inspiration from https://github.com/dvf/blockchain/blob/master/blockchain.py, and then I implemented it in JS
* More inspiration from https://lhartikk.github.io/jekyll/update/2017/07/14/chapter1.html
* Sha cryptography from https://github.com/brix/crypto-js

* Give a history of bitcoin, and talk about how long it will take to mine the 100 coins
* Make this upbeat - and YouTubeAble (with highlights/callouts and music)
* Have it scroll over the bitcoin.pdf


* TODO place app and p2p-chain-server in app/
* rename app to main.js
* place blockchain and block into a blockchain/ dir
* place transaction-related files like transaction and wallet into a transaction/ dir
* Test the transaction, wallet, and transactionPool?
* Test the app, and p2p-chain-server? If not, nbd.

* Strategy?
* Record and release the blockchain section first, and have the transaction section pending

/*
POSTMAN TEST
First run one node
$ HTTP_PORT=3001 P2P_PORT=5001 npm run dev
Run a second node
$ HTTP_PORT=3002 P2P_PORT=5002 PEERS=ws://localhost:5001 npm run dev
$ curl http://localhost:3002/public-key
grab value from ^^
hit_transactions = ?
$ hit_transactions * curl -d '{"address":"0429d6c26410c83f725609426ed63b0b6f8cdfe2a7414deab02bfefa53fa2b30d458bd6901fee6272ff373f1adec6f4f28e57b25c0f1487d39890ab073f80bf5e8", "amount":"50"}' -H "Content-Type: application/json" -X POST http://localhost:3001/transact
// TODO: Why does mine-transactions show an invalid value?
$ curl http://localhost:3001/transactions
$ curl http://localhost:3002/transactions
$ curl http://localhost:3001/mine-transactions
$ curl http://localhost:3001/balance
// expect a balance to equal 500 - (hit_transactions * 50) + 50 // for the reward
$ curl http://localhost:3002/blocks
$ curl http://localhost:3001/transactions
$ curl http://localhost:3002/transactions
*/